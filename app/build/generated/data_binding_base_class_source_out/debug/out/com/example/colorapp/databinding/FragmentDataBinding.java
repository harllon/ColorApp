// Generated by view binder compiler. Do not edit!
package com.example.colorapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.SeekBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.colorapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SeekBar Bbar;

  @NonNull
  public final EditText BvalueEdittxt;

  @NonNull
  public final SeekBar Gbar;

  @NonNull
  public final EditText GvalueEdittxt;

  @NonNull
  public final SeekBar Rbar;

  @NonNull
  public final EditText RvalueEdittxt;

  @NonNull
  public final ConstraintLayout frameLayout;

  private FragmentDataBinding(@NonNull ConstraintLayout rootView, @NonNull SeekBar Bbar,
      @NonNull EditText BvalueEdittxt, @NonNull SeekBar Gbar, @NonNull EditText GvalueEdittxt,
      @NonNull SeekBar Rbar, @NonNull EditText RvalueEdittxt,
      @NonNull ConstraintLayout frameLayout) {
    this.rootView = rootView;
    this.Bbar = Bbar;
    this.BvalueEdittxt = BvalueEdittxt;
    this.Gbar = Gbar;
    this.GvalueEdittxt = GvalueEdittxt;
    this.Rbar = Rbar;
    this.RvalueEdittxt = RvalueEdittxt;
    this.frameLayout = frameLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Bbar;
      SeekBar Bbar = rootView.findViewById(id);
      if (Bbar == null) {
        break missingId;
      }

      id = R.id.Bvalue_edittxt;
      EditText BvalueEdittxt = rootView.findViewById(id);
      if (BvalueEdittxt == null) {
        break missingId;
      }

      id = R.id.Gbar;
      SeekBar Gbar = rootView.findViewById(id);
      if (Gbar == null) {
        break missingId;
      }

      id = R.id.Gvalue_edittxt;
      EditText GvalueEdittxt = rootView.findViewById(id);
      if (GvalueEdittxt == null) {
        break missingId;
      }

      id = R.id.Rbar;
      SeekBar Rbar = rootView.findViewById(id);
      if (Rbar == null) {
        break missingId;
      }

      id = R.id.Rvalue_edittxt;
      EditText RvalueEdittxt = rootView.findViewById(id);
      if (RvalueEdittxt == null) {
        break missingId;
      }

      ConstraintLayout frameLayout = (ConstraintLayout) rootView;

      return new FragmentDataBinding((ConstraintLayout) rootView, Bbar, BvalueEdittxt, Gbar,
          GvalueEdittxt, Rbar, RvalueEdittxt, frameLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
